<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Kebot | Keith is Robot</title>
    <link href="http://kebot.me/feed/" rel="self" />
    
    <link href="http://kebot.me" />
    
    <updated>2012-02-20T00:10:24Z</updated>
    <id>http://kebot.me</id>
    <entry>
        <title type="html"><![CDATA[Sass and Compass]]></title>
        <author><name>Kebot</name><uri>http://kebot.me</uri></author>
        <link href="http://kebot.me/gituns/compass/"/>
        <updated>2012-02-13T00:00:00Z</updated>
        <published>2012-02-13T00:00:00Z</published>
        <id>http://kebot.me/gituns/compass/</id>
        <content type="html" xml:base="http://kebot.me" xml:lang="en">
            <![CDATA[ <p>Compass</p> ]]>
        </content>
    </entry>
    <entry>
        <title type="html"><![CDATA[All about 2011]]></title>
        <author><name>Kebot</name><uri>http://kebot.me</uri></author>
        <link href="http://kebot.me/2012/1/2011/"/>
        <updated>2012-01-08T00:00:00Z</updated>
        <published>2012-01-08T00:00:00Z</published>
        <id>http://kebot.me/2012/1/2011/</id>
        <category scheme="http://kebot.me/tag/life/" term="life" label="Life" />
        <category scheme="http://kebot.me/tag/2011/" term="2011" label="2011" />
        <content type="html" xml:base="http://kebot.me" xml:lang="en">
            <![CDATA[ <p>2011 , 农历辛卯年,也称为兔年.</p>
<p>每段岁月,给它取名,让它过去,但也要留点记忆</p>
<p>公元2010年,称为"漉",取,忙碌,湿漉漉</p>
<p>2011年,是"漉"的第二年</p>
<p>这一年我22周岁,我不是特别忙碌,但下体一般是湿漉漉的.</p>
<p>没有写诗
    因为没有情绪
谈了一次恋爱
    还是处男</p>
<p>三月前记不清了
四月去了趟武汉,五月去了北京
七月到了四川,然后我奔向北京
在北京呆了两个月,九月回杭州
十月份骑车环了一次太湖
十一月可能去了一次千岛湖,是宅着的
年末在南京</p>
<p>大部分的生活都围绕着音乐,代码和骑行展开.有点单调,但也很cool</p>
<p>看了几百部电影,十几本书可能,听了几十张专辑吧</p>
<p>新认识了几十个朋友,淡忘了很多老朋友.</p>
<p>越到后来,对于这个世界,我还是在一步步的试错</p>
<pre><code>i'm `听临`
</code></pre> ]]>
        </content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Blog move to liquidluck]]></title>
        <author><name>Kebot</name><uri>http://kebot.me</uri></author>
        <link href="http://kebot.me/2011/12/again/"/>
        <updated>2011-12-07T00:00:00Z</updated>
        <published>2011-12-07T00:00:00Z</published>
        <id>http://kebot.me/2011/12/again/</id>
        <category scheme="http://kebot.me/tag/date/" term="date" label="Date" />
        <content type="html" xml:base="http://kebot.me" xml:lang="en">
            <![CDATA[ <p><a href="" title="http://github.com/lepture/liquidluck">LiquidLuck</a> is a static blog
generator.</p> ]]>
        </content>
    </entry>
    <entry>
        <title type="html"><![CDATA[文件保存时自动刷新浏览器 F5 For Mac and VIM]]></title>
        <author><name>Kebot</name><uri>http://kebot.me</uri></author>
        <link href="http://kebot.me/2011/9/%e6%96%87%e4%bb%b6%e4%bf%9d%e5%ad%98%e6%97%b6%e8%87%aa%e5%8a%a8%e5%88%b7%e6%96%b0%e6%b5%8f%e8%a7%88%e5%99%a8-f5-for-mac-and-vim/"/>
        <updated>2011-09-15T00:00:00Z</updated>
        <published>2011-09-15T00:00:00Z</published>
        <id>http://kebot.me/2011/9/%e6%96%87%e4%bb%b6%e4%bf%9d%e5%ad%98%e6%97%b6%e8%87%aa%e5%8a%a8%e5%88%b7%e6%96%b0%e6%b5%8f%e8%a7%88%e5%99%a8-f5-for-mac-and-vim/</id>
        <content type="html" xml:base="http://kebot.me" xml:lang="en">
            <![CDATA[ <p>最近发现 <a href="http://www.getf5.com/">F5</a>这个插件很火,于是去看了下简介,其实就是检测一个文件夹里面的文件改动,然后自动刷新浏览器,不过看上去只支持windows. 因为我一直在用 VIM , 于是就写了几行代码实现了 "保存文件自动刷新这个功能" 不过,首先,必须确保你的机器是Mac和GoogleChrome浏览器 为了让代码更加Python一点,于是我用了appscript这个python库,所以要先运行下这行代码 
<pre lang="bash"> 
easy_install appscript </p>
<h1>或者</h1>
<p>pip install appscript 
</pre></p>
<p>然后将下面这些话加入你的 .vimrc 
<pre lang="python"> 
autocmd BufWritePost <em>.coffee,</em>.css,*.html :call Refresh_Chrome()</p>
<p>function! Refresh_Chrome()
python &lt;&lt; EOF
import appscript
appscript.app("Google Chrome").windows[0].active_tab.reload()
EOF
endfunction</p>
<p></pre>
======================================================================== 现在已经够用了,以后可以考虑写一个python脚本来监测文件夹的改动并刷新浏览器</p> ]]>
        </content>
    </entry>
    <entry>
        <title type="html"><![CDATA[< V for Lyrics > GiTuns+DynamicLyrics 改名]]></title>
        <author><name>Kebot</name><uri>http://kebot.me</uri></author>
        <link href="http://kebot.me/2011/8/v-for-lyrics-gitunsdynamiclyrics-%e6%94%b9%e5%90%8d/"/>
        <updated>2011-08-14T00:00:00Z</updated>
        <published>2011-08-14T00:00:00Z</published>
        <id>http://kebot.me/2011/8/v-for-lyrics-gitunsdynamiclyrics-%e6%94%b9%e5%90%8d/</id>
        <content type="html" xml:base="http://kebot.me" xml:lang="en">
            <![CDATA[ <p>出场人物:
<a href="http://blog.4321.la/">Martian</a> 是 Dynamic Lyrics 的作者 </p>
<p>在我的死缠烂打 , 或者威逼利诱之下 ,他决定和我合作了 , 一起写mac下面歌词的软件...</p>
<p>最近大连人民很英勇,小白 看着图片突然想起来 V for Vendetta,决定向它致敬,于是和小白商量了下各个语种 '歌词' 怎么写,最后发现很多语言都是 'lyric' 于是就决定取名 V for Lyrics ...</p>
<p>然后更多的东西,只能敬请期待了~</p> ]]>
        </content>
    </entry>
    <entry>
        <title type="html"><![CDATA[用VIM 写 CoffeeScript , 并实现时时编译]]></title>
        <author><name>Kebot</name><uri>http://kebot.me</uri></author>
        <link href="http://kebot.me/2011/7/vim-coffeescript/"/>
        <updated>2011-07-15T00:00:00Z</updated>
        <published>2011-07-15T00:00:00Z</published>
        <id>http://kebot.me/2011/7/vim-coffeescript/</id>
        <content type="html" xml:base="http://kebot.me" xml:lang="en">
            <![CDATA[ <h1>神马是CoffeeScript</h1>
<p><a href="http://jashkenas.github.com/coffee-script/">Coffee Script</a> 就是 JavaScript 但它比 JavaScript 有更好的语法,更简介的代码,更规范的编码规范,它留下了JavaScript 好的部分,去掉了不好的部分.</p>
<p>这是CoffeeScript的介绍页面:<a href="http://jashkenas.github.com/coffee-script/">http://jashkenas.github.com/coffee-script/</a></p>
<p>你可以用TRY COFFEESCRIPT尝试写一些script,然后程序会时时显示转换后的javascript代码.</p>
<h1>用VIM写CoffeeScript</h1>
<p>但我是用VIM写的代码,VIM需要一些配置,索幸,有人已经写了VIM的coffee script插件,地址在这里:<a href="https://github.com/kchmck/vim-coffee-script">https://github.com/kchmck/vim-coffee-script</a></p>
<p>下面以Mac为例介绍下VIM配置CoffeeScript开发环境:</p>
<pre lang="bash">
# 安装node.js
brew install node.js
# 安装npm
# 安装coffee-script
npm install -g coffee-script
# 安装 [pathogen](http://www.vim.org/scripts/script.php?script_id=2332)
cd ~/.vim/bundle
git clone git://github.com/kchmck/vim-coffee-script.git
# 打开 ~/.vimrc 加下面一行,可以实现保存时候自动编译成js文件
autocmd BufWritePost *.coffee silent CoffeeMake! -b | cwindow
# 我写成这样保存时可以实时看到编译结果
autocmd BufWritePost *.coffee silent CoffeeCompile | CoffeeMake! -b | cwindow
</pre>

<p>接着随便打开.coffee文件,写一点代码,保存的时候vim会自动生成 .js 文件</p> ]]>
        </content>
    </entry>
    <entry>
        <title type="html"><![CDATA[用Commandline-Cocoa在命令行中快速调试Objective-C/Cocoa代码]]></title>
        <author><name>Kebot</name><uri>http://kebot.me</uri></author>
        <link href="http://kebot.me/2011/6/%e7%94%a8commandline-cocoa%e5%9c%a8%e5%91%bd%e4%bb%a4%e8%a1%8c%e4%b8%ad%e5%bf%ab%e9%80%9f%e8%b0%83%e8%af%95objective-ccocoa%e4%bb%a3%e7%a0%81/"/>
        <updated>2011-06-28T00:00:00Z</updated>
        <published>2011-06-28T00:00:00Z</published>
        <id>http://kebot.me/2011/6/%e7%94%a8commandline-cocoa%e5%9c%a8%e5%91%bd%e4%bb%a4%e8%a1%8c%e4%b8%ad%e5%bf%ab%e9%80%9f%e8%b0%83%e8%af%95objective-ccocoa%e4%bb%a3%e7%a0%81/</id>
        <content type="html" xml:base="http://kebot.me" xml:lang="en">
            <![CDATA[ <p>学习一门语言是一个不断试错的过程,对于我来说,脚本语言的方便之处是可以快速地运行,调试... PHP,Python,JavaScript...这些脚本语言都可以不借助第三方工具,快速进行调试...</p>

<p> </p>

<p><hr />
<p>有时候你只想测试一段小小的代码片断 -- 或许是看看 NSDateFormatter 在不同情况下的输出,测试一些文本替换的方法(testing out some text replacement routine),或者是测试下画图</p>
<p> </p>
<p>对于Objective-C的学习来说,每次想试验一个小功能,或者运行一段小代码,都需要新建一个XCode Project 然后导入相应的Framework来进行Simple test,这是经常的事,这是"我"(指作者)为什么我把这些 shell script 整理出来让你在终端运行Cocoa代码.</p>
<pre lang="sh">$ runcocoa 'NSDateFormatter *formatter = [[[NSDateFormatter alloc] init] autorelease]; [formatter setDateFormat:@"d MMM, h:mm a"]; NSLog(@"%@", [formatter stringFromDate:[NSDate date]]);'</p>
<p>2011-02-23 20:02:10.313 runcocoa-output[28025:903] 23 Feb, 8:02 PM
</pre>
<p>你可以直接从命令行完全访问各种Cocoa资源库,还有在iOS模式,你也可以访问iOS的部分.</p>
<p>更新:现在可以在 <a href="https://github.com/michaeltyson/Commandline-Cocoa">Github 中找到这个项目</a></p>
<p>你可以把代码当做命令行参数, 也可以使用标准输入输出,所以你可以用管道.这对TextMate 使用者非常方便: 打一些代码,然后输入 <strong> Cmd-Option-R </strong> ,输入 'runcocoa' , 回车,然后就能看到结果了.</p>
<p>明白了?</p>
<p>你也引入别的framework (比如:使用 <strong> -include AudioToolbox/AudioToolbox.h -framework AudioToolbox </strong> 作为命令行参数),然后用gdb模式运行代码(带上 -gdb 参数).</p>
<p>你也可以给命令加上 -ios 参数来运行iOS代码,试试这个:</p>
<pre lang="sh">runcocoa -ios 'UIGraphicsBeginImageContext(CGSizeMake(100,100)); CGContextRef ctx = UIGraphicsGetCurrentContext(); CGContextSetFillColorWithColor(ctx,[[UIColor whiteColor] CGColor]); CGContextBeginPath(ctx); CGContextMoveToPoint(ctx, 50, 0); CGContextAddArc(ctx, 50, 50, 50, M_PI/2.0, M_PI/2.0 + (2<em>M_PI), 0); CGContextFillPath(ctx); UIImage </em>icon = [UIImage imageWithData:[NSData dataWithContentsOfURL:[NSURL URLWithString:@"http://atastypixel.com/favicon.ico"]]]; [icon drawAtPoint:CGPointMake((100-[icon size].width)/2.0,(100-[icon size].height)/2.0)]; UIImage *i = UIGraphicsGetImageFromCurrentImageContext(); UIGraphicsEndImageContext(); [UIImagePNGRepresentation(i) writeToFile:@"output.png" atomically:NO];'; open output.png;
</pre>
<a href="http://atastypixel.com/blog/objective-c-cocoa-on-the-command-line/">原文链接</a>
<p><a href="http://atastypixel.com/blog/objective-c-cocoa-on-the-command-line/">http://atastypixel.com/blog/objective-c-cocoa-on-the-command-line/</a></p>
<p> </p></p> ]]>
        </content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GiTuns New Version]]></title>
        <author><name>Kebot</name><uri>http://kebot.me</uri></author>
        <link href="http://kebot.me/2011/4/%e6%96%b0%e7%95%8c%e9%9d%a2-%e5%8d%8a%e9%80%8f%e6%98%8e-%e7%aa%97%e5%8f%a3%e7%bd%ae%e9%a1%b6-gituns-%e6%9c%80%e6%96%b0%e5%bc%80%e5%8f%91%e7%89%88/"/>
        <updated>2011-04-25T00:00:00Z</updated>
        <published>2011-04-25T00:00:00Z</published>
        <id>http://kebot.me/2011/4/%e6%96%b0%e7%95%8c%e9%9d%a2-%e5%8d%8a%e9%80%8f%e6%98%8e-%e7%aa%97%e5%8f%a3%e7%bd%ae%e9%a1%b6-gituns-%e6%9c%80%e6%96%b0%e5%bc%80%e5%8f%91%e7%89%88/</id>
        <content type="html" xml:base="http://kebot.me" xml:lang="en">
            <![CDATA[ <p>GiTuns</p>
<p><img alt="GiTuns" src="https://img.skitch.com/20110425-rfc6tp8g6d6sjqh69r2rgpdtbf.jpg" /></p> ]]>
        </content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GiTuns in Mac App Store Status:Rejected.第一次被拒]]></title>
        <author><name>Kebot</name><uri>http://kebot.me</uri></author>
        <link href="http://kebot.me/2011/3/gituns-in-mac-app-store-statusrejected-%e7%ac%ac%e4%b8%80%e6%ac%a1%e8%a2%ab%e6%8b%92/"/>
        <updated>2011-03-19T00:00:00Z</updated>
        <published>2011-03-19T00:00:00Z</published>
        <id>http://kebot.me/2011/3/gituns-in-mac-app-store-statusrejected-%e7%ac%ac%e4%b8%80%e6%ac%a1%e8%a2%ab%e6%8b%92/</id>
        <content type="html" xml:base="http://kebot.me" xml:lang="en">
            <![CDATA[ <p><em>事情总不是进展那么顺利. GiTuns被App Store拒绝了</em></p>
<p>原因有二:
2.3 Apps that do not perform as advertised by the developer will be rejected
2.21 Apps may not use update mechanisms outside of the App Store</p>
<p>主要是2.3:</p>
<blockquote>
Apple said this:

Words Darker Than Their Wings.mp3 by Alter Bridge
City Of Night.mp3 by Bruce Springsteen
Respect Yourself.mp3 by Huey Lewis And The News
Honest Face.mp3 by Liam Finn + Eliza Jane
O Christmas Tree - Album Version by VeggieTales (Veggie Tunes)

Searched each song via both search machines. No lyrics found.

</blockquote>

<p>Will add some Engine that support more English song.</p> ]]>
        </content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Disqus -- 新兴的评论系统]]></title>
        <author><name>Kebot</name><uri>http://kebot.me</uri></author>
        <link href="http://kebot.me/2011/3/disqus-%e6%96%b0%e5%85%b4%e7%9a%84%e8%af%84%e8%ae%ba%e7%b3%bb%e7%bb%9f/"/>
        <updated>2011-03-08T00:00:00Z</updated>
        <published>2011-03-08T00:00:00Z</published>
        <id>http://kebot.me/2011/3/disqus-%e6%96%b0%e5%85%b4%e7%9a%84%e8%af%84%e8%ae%ba%e7%b3%bb%e7%bb%9f/</id>
        <content type="html" xml:base="http://kebot.me" xml:lang="en">
            <![CDATA[ <p>不止一次在别人的评论系统里面看到了Disqus的身影~~</p>
<p>DISQUZ是一个管理站点评论的插件,它的方便之处在于,在这个社会化的时代,让你的博客和各种社会化网络连接,包括<a href="http://twitter.com/">Twitter</a> , <a href="http://facebook.com/">Facebook</a> , <a href="http://yahoo.com/">Yahoo</a> 等社会化网络进行连接. 很方便地进行单点登陆 .</p>
<p>你可以在DISQUZ网站上管理你参与过的评论,你"喜欢"过的文章,回复别人的评论等等...确实方便了不少.</p>
<h2>What I want do?</h2>
<p>既然提供了单点登陆,我联想起国内的众多服务,是不是可以用Disqus的API来实现:新浪/腾讯围脖,豆瓣,Gmail等进行登陆呢?</p>
<p>&lt;未完&gt;</p>
<p><a href="http://disqus.com/">DISQUZ官方网站</a></p>
<p><a href="http://wordpress.org/extend/plugins/disqus-comment-system/">DISQUZ Wordpress Plugin</a></p> ]]>
        </content>
    </entry>
    </feed>